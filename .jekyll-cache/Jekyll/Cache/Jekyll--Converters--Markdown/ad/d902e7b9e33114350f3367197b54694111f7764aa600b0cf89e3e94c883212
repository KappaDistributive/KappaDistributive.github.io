I"Ì)<h1 id="fragile-knowledge">Fragile Knowledge</h1>

<blockquote>
  <p>I don‚Äôt know what‚Äôs the matter with people: they don‚Äôt learn by
understanding; they learn by some other way - by rote, or
something. Their knowledge is so fragile!</p>

  <p>‚Äì Richard P. Feynman</p>
</blockquote>

<p>One key to successfully mastering a new subject, I believe, is to
connect it to something that you are already deeply familiar
with. This idea is as old as human learning and a common quality of
great lecturers is that they fully embrace its logical conclusion:
When introducing an audience to any novel concept, start out by
conveying the main ideas in analogies and metaphors rather than
drowning them in complexities and details.</p>

<p>And while people tend to agree that this is a good quality in a
teacher, they often deprive themselves of this luxury when learning on
their own. Admittedly, explaining a new idea well to yourself requires
a substantial amount of additional effort. However, I am convinced
that this overhead is not only economical but of fundamental
importance if you ever plan to master a new set  of skills (as opposed to
gaining the mostly worthless knowledge of sparsely connected facts).</p>

<h1 id="case-study-understanding-neural-networks">Case Study: Understanding Neural Networks</h1>

<p>So, if you are still with me, I‚Äôd like to demonstrate how this might
look like when first learning about neural networks. Basically I‚Äôll
try to reconstruct the inner monologue that went through my head when
I just first learned about them.</p>

<p>‚ÄúNeural networks are basically <a href="https://en.wikipedia.org/wiki/Directed_graph">directed
graphs</a> with
metadata. Nodes represent neurons, edges represent the data-flow
between those neurons and the metadata comes in two flavours:</p>

<ol>
  <li>
    <p>The weight attached to every edge determines how much of an
influence its source neuron has in the overall network and</p>
  </li>
  <li>
    <p>An activation function, attached to each neuron, that determines the
‚Äòshape‚Äô of this neuron‚Äôs discharge pattern. <sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></p>
  </li>
</ol>

<p>So far, so good. But what does that mean? How can a neural network
process information?‚Äù</p>

<p>Stepping out of character for a second: It‚Äôs here that you can make
life very difficult for yourself. Both leaving this question
unanswered and jumping into some complex example
(e.g. <a href="https://arxiv.org/abs/1512.03385">ResNet</a>) are, in my opinion,
terrible mistakes. You want to build a simple example, ideally relying
only on yourself, for two reasons:</p>

<ol>
  <li>First and most importantly: This is a litmus test. If you are not
able to build a basic example of the concept you‚Äôve just learned
about, you haven‚Äôt understood the basics yet and need to revisit
them. By forcing yourself to sit down and actually spelling out a very
simple example in detail, you‚Äôre making sure that your previous gained
confidence is justified and that you‚Äôre not just fooling yourself.
    <blockquote>
      <p>The first principle is that you must not fool yourself ‚Äì and you are
the easiest person to fool.</p>

      <p>‚Äì Richard P. Feynman</p>
    </blockquote>
  </li>
  <li>
    <p>If you want to master any subject, it is my firm opinion that you
must carry around a large set of examples in your head. These
examples will not only guide your intuition but they will also
serve as a more and more elaborate testing ground for new ideas. In
the future, if someone tells you about some new fancy concept (that
someone might be you), you can refer to an appropriate example in
your head and see how it would influence that. If the results don‚Äôt
make sense, something‚Äôs wrong! Either you‚Äôve misunderstood what the
other party is telling you or there is a mistake. Assuming you want this
conversation to remain meaningful, you need to fix that! This is
how I, and how I believe most of my colleagues, are able to build
an appropriate intuition about complex concepts that often run
counter to any experience you might have had in your daily life.</p>

    <p>Building a simple example from scratch is your first step
toward assembling your internal database.</p>
  </li>
</ol>

<p>Okay, let‚Äôs return to the inner monologue:</p>

<p>‚ÄúIs there anything I already know about that could easily be realized
as a neural network? Actually, yes: Linear functions are of the form
<script type="math/tex">f(x) = a \cdot x + b</script> and they are represented by the following
neural network: <sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup></p>

<figure style="align: center">
  <img src="/images/diagrams/nn_linear_function.png" style="max-width: 400px;" alt="a neural network that represents a linear function" />
</figure>

<p>Great, but how about logical connections? If artificial neural
networks are supposed to model actual neural networks, they certainly
must be able to capture logic gates, right? Right!</p>

<figure style="align: center">
  <img src="/images/diagrams/nn_not.png" style="max-width: 400px;" alt="a neural network that represents logical negation" />
</figure>

<p>Here <script type="math/tex">\chi = \chi_{[0, \infty)}</script> is the activation function of
<script type="math/tex">a_1</script> and all you need to know is that <script type="math/tex">\chi(z) = 0</script> for all <script type="math/tex">% <![CDATA[
z
< 0 %]]></script> and <script type="math/tex">\chi(z) = 1</script> for all <script type="math/tex">z \ge 0</script>. So, if we set <script type="math/tex">x_1 =
0</script>, we get that <script type="math/tex">a_1 = \chi(w_0 \cdot x_0 + w_1 \cdot x_1) =
\chi(0 \cdot 1 + (-1) \cdot 0) = \chi(0) = 0</script>. On the other hand, if we let
<script type="math/tex">x_1 = 1</script>, we get that <script type="math/tex">a_1 = \chi(0 \cdot 1 + (-1) \cdot 1) = \chi(-1) =
0</script>. So this neural network does indeed represent <script type="math/tex">\mathrm{NOT}(x_1)</script>!‚Äù</p>

<p>At this point, you might want to cook up a few more examples and in an
earlier tweet I demonstrated how to represent other basic logic gates
(AND, OR, NOR, XOR, XNOR) as neural networks as well. I‚Äôd encourage
you to try it yourself first and then <a href="https://twitter.com/mesken_stefan/status/1138694458470539264">hop over to
Twitter</a>
and compare your results with mine. <sup id="fnref:3"><a href="#fn:3" class="footnote">3</a></sup></p>

<p>Once you‚Äôve done that, you may notice what I‚Äôve noticed: Not only can
neural networks represent logic gates. <em>Neural networks are nothing
more than logic gates</em>, with a few minor adjustments:</p>

<ol>
  <li>
    <p>Inputs are allowed to take on any real number as value, not just <script type="math/tex">0</script> and <script type="math/tex">1</script>,</p>
  </li>
  <li>
    <p>We add a restriction that a node‚Äôs value is computed by a weighted,
linear combination of the values to its left followed by an
activation function and</p>
  </li>
  <li>
    <p>We add an activation functions to our nodes. <sup id="fnref:4"><a href="#fn:4" class="footnote">4</a></sup>‚Äù</p>
  </li>
</ol>

<p>It may not seem that way, but this little detour is incredibly
beneficial to your overall learning strategy. <strong>Ideas and memories die
in a vacuum</strong>. If you want them to become lasting and meaningful, you
need to them connect to as many previously established ideas as
possible. Don‚Äôt believe me? Then tell me: What did you have for dinner
last Wednesday? Unless you are able to connect last Wednesday‚Äôs dinner
to something more meaningful (maybe you happened to be on a first
date), most of us will struggle mightily with this very simple
question. And if I ask you about your lunch a year ago, there‚Äôs
basically no chance you‚Äôll be able to remember. On the other hand, if
I ask you what you did last Christmas (or even better: On your wedding
day if you happen to be married), the task becomes much easier. You
either connect ideas and memories or you will lose them ‚Äì
quickly. Not only that: Sparsely connected ideas (what Feynman calls
‚Äòfragile knowledge‚Äô) are basically worthless as they‚Äôre not readily
available to be used in similar, but slightly different, settings.</p>

<h1 id="what-you-should-take-away-from-this">What you should take away from this</h1>

<p>If you make a habit of <em>always</em> explaining new ideas to yourself until
you‚Äôve completely broken them down to related concepts, that you‚Äôve
already mastered, you‚Äôll never have to learn or memorize anything
truly novel again. And, over time, you‚Äôll gain firm, deeply connected,
foundational knowledge about seemingly unrelated concepts that will
not only help you to learn other concepts faster and more efficient
but, ultimately, also allow you to solve problems in surprising,
efficient and truly ingenious ways. Being able to do that is, in a
nutshell, the mark of a true expert.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>I think it‚Äôs helpful to point out that this is one of the ways
that artificial neural networks differ from biological
ones. Biological neurons either fire or they don‚Äôt ‚Äì so, in a
way, the only activation function they‚Äôre allowed to have is the
<a href="https://en.wikipedia.org/wiki/Indicator_function">characteristic
function</a>
<script type="math/tex">\chi_{(-\infty, a]}</script> for some number <script type="math/tex">a</script>.¬†<a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>This follows Andrew Ng‚Äôs handy convention that any neuron/weight with
a <script type="math/tex">0</script> as subscript represents a bias component ‚Äì independent of the input.¬†<a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>In case you don‚Äôt want to use Twitter, you can find my solution <a href="http://localhost:4000/images/diagrams/nn_logic_gates.png">here</a>¬†<a href="#fnref:3" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:4">
      <p>This point, in theory, is incredibly powerful. In fact, it‚Äôs too
powerful. Since neural networks are intended to approximate some
function <script type="math/tex">f</script> to begin with, we could always achieve this by
taking <script type="math/tex">f</script> as our activation function. In practice, however,
<script type="math/tex">f</script> is unknown, we only allow activation functions from a very
restrictive, simple set of functions and their specific choice, in
many cases, turns out to be surprisingly irrelevant.¬†<a href="#fnref:4" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET